{"mappings":"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","sources":["<anon>","js/fifteen/index.js","js/fifteen/fifteen.js","js/fifteen/fifteen-timer.js"],"sourcesContent":["const $00f8eafa334b9c17$var$gameContainer = document.querySelector(\".content--wrapper\");\nconst $00f8eafa334b9c17$var$containerButtons = document.querySelector(\"#fifteen\");\nconst $00f8eafa334b9c17$var$buttonItems = Array.from(document.querySelectorAll(\".fifteen__button\"));\nconst $00f8eafa334b9c17$var$countItems = 16;\nconst $00f8eafa334b9c17$var$gap = 10;\nif ($00f8eafa334b9c17$var$buttonItems.length !== $00f8eafa334b9c17$var$countItems) throw new Error(`There should be ${$00f8eafa334b9c17$var$countItems} items in HTML`);\n/* ====== Start Position ======*/ $00f8eafa334b9c17$var$buttonItems[$00f8eafa334b9c17$var$countItems - 1].style.display = \"none\";\nlet $00f8eafa334b9c17$var$matrix = $00f8eafa334b9c17$var$getMatrix($00f8eafa334b9c17$var$buttonItems.map((el)=>Number(el.dataset.matrixId)));\n$00f8eafa334b9c17$var$setPositionItem($00f8eafa334b9c17$var$matrix);\n/* ====== Shuffle ======*/ const $00f8eafa334b9c17$var$maxShuffleCount = 100;\nlet $00f8eafa334b9c17$var$timer;\nlet $00f8eafa334b9c17$var$shuffled = false;\nlet $00f8eafa334b9c17$var$isShuffle = false;\nconst $00f8eafa334b9c17$var$shuffledClassName = \"gameShuffle\";\ndocument.querySelector(\"#shuffle\").addEventListener(\"click\", ()=>{\n    if ($00f8eafa334b9c17$var$shuffled) return;\n    $00f8eafa334b9c17$var$shuffled = true;\n    $00f8eafa334b9c17$var$isShuffle = true;\n    let shuffleCount = 0;\n    clearInterval($00f8eafa334b9c17$var$timer);\n    $00f8eafa334b9c17$var$gameContainer.classList.add($00f8eafa334b9c17$var$shuffledClassName);\n    $00f8eafa334b9c17$var$timer = setInterval(()=>{\n        $00f8eafa334b9c17$var$randomSwap($00f8eafa334b9c17$var$matrix);\n        $00f8eafa334b9c17$var$setPositionItem($00f8eafa334b9c17$var$matrix);\n        shuffleCount += 1;\n        if (shuffleCount >= $00f8eafa334b9c17$var$maxShuffleCount) {\n            $00f8eafa334b9c17$var$gameContainer.classList.remove($00f8eafa334b9c17$var$shuffledClassName);\n            clearInterval($00f8eafa334b9c17$var$timer);\n            $00f8eafa334b9c17$var$shuffled = false;\n        }\n    }, 70);\n});\n/* ====== Change Position by click ======*/ const $00f8eafa334b9c17$var$blankPosition = 16;\n$00f8eafa334b9c17$var$containerButtons.addEventListener(\"click\", (e)=>{\n    if ($00f8eafa334b9c17$var$shuffled) return;\n    const buttonItem = e.target.closest(\"button\");\n    if (!buttonItem) return;\n    const buttonNumber = Number(buttonItem.dataset.matrixId);\n    const buttonCoords = $00f8eafa334b9c17$var$findCoordsByNumber(buttonNumber, $00f8eafa334b9c17$var$matrix);\n    const blankCoords = $00f8eafa334b9c17$var$findCoordsByNumber($00f8eafa334b9c17$var$blankPosition, $00f8eafa334b9c17$var$matrix);\n    const isValid = $00f8eafa334b9c17$var$isValidForSwap(buttonCoords, blankCoords);\n    if (isValid) {\n        $00f8eafa334b9c17$var$swap(blankCoords, buttonCoords, $00f8eafa334b9c17$var$matrix);\n        $00f8eafa334b9c17$var$setPositionItem($00f8eafa334b9c17$var$matrix);\n    }\n});\n/* ====== Change Position by keydown ======*/ window.addEventListener(\"keydown\", (e)=>{\n    if ($00f8eafa334b9c17$var$shuffled) return;\n    if (!e.key.includes(\"Arrow\")) return;\n    const blankCoords = $00f8eafa334b9c17$var$findCoordsByNumber($00f8eafa334b9c17$var$blankPosition, $00f8eafa334b9c17$var$matrix);\n    const buttonCoords = {\n        x: blankCoords.x,\n        y: blankCoords.y\n    };\n    const direction = e.key.split(\"Arrow\")[1].toLowerCase();\n    const maxIndexMatrix = $00f8eafa334b9c17$var$matrix.length;\n    switch(direction){\n        case \"up\":\n            buttonCoords.y += 1;\n            break;\n        case \"down\":\n            buttonCoords.y -= 1;\n            break;\n        case \"left\":\n            buttonCoords.x += 1;\n            break;\n        case \"right\":\n            buttonCoords.x -= 1;\n            break;\n    }\n    if (buttonCoords.y >= maxIndexMatrix || buttonCoords.y < 0 || buttonCoords.x >= maxIndexMatrix || buttonCoords.x < 0) return;\n    $00f8eafa334b9c17$var$swap(blankCoords, buttonCoords, $00f8eafa334b9c17$var$matrix);\n    $00f8eafa334b9c17$var$setPositionItem($00f8eafa334b9c17$var$matrix);\n});\n/* ====== HELPERS ======*/ /* =====================*/ function $00f8eafa334b9c17$var$getMatrix(arr) {\n    const matrix = [\n        [],\n        [],\n        [],\n        []\n    ];\n    let x = 0;\n    let y = 0;\n    for(let i = 0; i < arr.length; i++){\n        if (x >= 4) {\n            y++;\n            x = 0;\n        }\n        matrix[y][x] = arr[i];\n        x++;\n    }\n    return matrix;\n}\n// ====================\nfunction $00f8eafa334b9c17$var$setPositionItem(matrix) {\n    for(let y = 0; y < matrix.length; y++)for(let x = 0; x < matrix[y].length; x++){\n        const value = matrix[y][x];\n        const item = $00f8eafa334b9c17$var$buttonItems[value - 1];\n        $00f8eafa334b9c17$var$setItemStyles(item, x, y);\n    }\n}\n// ====================\nfunction $00f8eafa334b9c17$var$setItemStyles(item, x, y) {\n    const shiftPs = 100;\n    item.style.transform = `translate3D(calc(${x * shiftPs}% + ${$00f8eafa334b9c17$var$gap}px), calc(${y * shiftPs}% + ${$00f8eafa334b9c17$var$gap}px), 0)`;\n}\n// ====================\nlet $00f8eafa334b9c17$var$blockedCoords = null;\nfunction $00f8eafa334b9c17$var$randomSwap(matrix) {\n    const blankCoords = $00f8eafa334b9c17$var$findCoordsByNumber($00f8eafa334b9c17$var$blankPosition, matrix);\n    const validCords = $00f8eafa334b9c17$var$findValidCoords({\n        blankCoords: blankCoords,\n        matrix: matrix,\n        blockedCoords: $00f8eafa334b9c17$var$blockedCoords\n    });\n    const swapCoords = validCords[Math.floor(Math.random() * validCords.length)];\n    $00f8eafa334b9c17$var$swap(blankCoords, swapCoords, matrix);\n    $00f8eafa334b9c17$var$blockedCoords = blankCoords;\n}\n// ====================\nfunction $00f8eafa334b9c17$var$findValidCoords({ blankCoords: blankCoords, matrix: matrix, blockedCoords: blockedCoords }) {\n    const validCordsArr = [];\n    for(let y = 0; y < matrix.length; y++)for(let x = 0; x < matrix[y].length; x++){\n        if ($00f8eafa334b9c17$var$isValidForSwap({\n            x: x,\n            y: y\n        }, blankCoords)) {\n            if (!blockedCoords || !(blockedCoords.x === x && blockedCoords.y === y)) validCordsArr.push({\n                x: x,\n                y: y\n            });\n        }\n    }\n    return validCordsArr;\n}\n// ====================\nfunction $00f8eafa334b9c17$var$findCoordsByNumber(number, matrix) {\n    for(let y = 0; y < matrix.length; y++)for(let x = 0; x < matrix[y].length; x++){\n        if (matrix[y][x] === number) return {\n            x: x,\n            y: y\n        };\n    }\n    return null;\n}\n// ====================\nfunction $00f8eafa334b9c17$var$isValidForSwap(coordsBtn, coordsBlank) {\n    const diffX = Math.abs(coordsBtn.x - coordsBlank.x);\n    const diffY = Math.abs(coordsBtn.y - coordsBlank.y);\n    return (diffX === 1 || diffY === 1) && (coordsBtn.x === coordsBlank.x || coordsBtn.y === coordsBlank.y);\n}\n// ====================\nfunction $00f8eafa334b9c17$var$swap(blankCoords, buttonCoords, matrix) {\n    const blankNumber = matrix[blankCoords.y][blankCoords.x];\n    matrix[blankCoords.y][blankCoords.x] = matrix[buttonCoords.y][buttonCoords.x];\n    matrix[buttonCoords.y][buttonCoords.x] = blankNumber;\n    if ($00f8eafa334b9c17$var$isWon(matrix)) {\n        if (!$00f8eafa334b9c17$var$isShuffle) return;\n        $00f8eafa334b9c17$var$addWonClass();\n        $00f8eafa334b9c17$var$isShuffle = false;\n    }\n}\n/* ====== Show Win ======*/ const $00f8eafa334b9c17$var$winFlatArr = new Array(16).fill(0).map((_item, i)=>i + 1);\nfunction $00f8eafa334b9c17$var$isWon(matrix) {\n    const flatMatrix = matrix.flat();\n    for(let i = 0; i < $00f8eafa334b9c17$var$winFlatArr.length; i++){\n        if (flatMatrix[i] !== $00f8eafa334b9c17$var$winFlatArr[i]) return false;\n    }\n    return true;\n}\n// =======================\nconst $00f8eafa334b9c17$var$wonClass = \"fifteenWon\";\nfunction $00f8eafa334b9c17$var$addWonClass() {\n    setTimeout(()=>{\n        $00f8eafa334b9c17$var$containerButtons.classList.add($00f8eafa334b9c17$var$wonClass);\n        setTimeout(()=>{\n            $00f8eafa334b9c17$var$containerButtons.classList.remove($00f8eafa334b9c17$var$wonClass);\n        }, 1350);\n    }, 350);\n}\n\n\nconst $622e0960ebd1fffe$var$game = document.querySelector(\"#fifteen\");\nconst $622e0960ebd1fffe$var$shuffleBtn = document.querySelector(\".fifteen__shuffle\");\nconst $622e0960ebd1fffe$var$currentM = document.querySelector(\"#current-m\");\nconst $622e0960ebd1fffe$var$currentS = document.querySelector(\"#current-s\");\nconst $622e0960ebd1fffe$var$currentMS = document.querySelector(\"#current-ms\");\nconst $622e0960ebd1fffe$var$bestM = document.querySelector(\"#best-m\");\nconst $622e0960ebd1fffe$var$bestS = document.querySelector(\"#best-s\");\nconst $622e0960ebd1fffe$var$bestMS = document.querySelector(\"#best-ms\");\nconst $622e0960ebd1fffe$var$currentTime = document.querySelectorAll(\".timer__wrapper\");\n$622e0960ebd1fffe$var$bestM.innerHTML = localStorage.getItem(\"min\") || \"00\";\n$622e0960ebd1fffe$var$bestS.innerHTML = localStorage.getItem(\"sec\") || \"00\";\n$622e0960ebd1fffe$var$bestMS.innerHTML = localStorage.getItem(\"ms\") || \"00\";\nlet $622e0960ebd1fffe$var$isShuffle = false;\nlet $622e0960ebd1fffe$var$isFirstGame = false;\nlet $622e0960ebd1fffe$var$minutes = 0;\nlet $622e0960ebd1fffe$var$seconds = 0;\nlet $622e0960ebd1fffe$var$milliseconds = 0;\nlet $622e0960ebd1fffe$var$interval;\nlet $622e0960ebd1fffe$var$bestTimeValue = Number((localStorage.getItem(\"min\") || \"00\") + (localStorage.getItem(\"sec\") || \"00\") + (localStorage.getItem(\"ms\") || \"00\"));\nif ($622e0960ebd1fffe$var$bestTimeValue === 0) $622e0960ebd1fffe$var$isFirstGame = true;\nlet $622e0960ebd1fffe$var$currentTimeValue = null;\n$622e0960ebd1fffe$var$shuffleBtn.addEventListener(\"click\", $622e0960ebd1fffe$var$startConfig);\nfunction $622e0960ebd1fffe$var$startTimer() {\n    $622e0960ebd1fffe$var$game.removeEventListener(\"click\", $622e0960ebd1fffe$var$getInterval);\n    $622e0960ebd1fffe$var$milliseconds++;\n    $622e0960ebd1fffe$var$currentMS.innerHTML = \"0\" + $622e0960ebd1fffe$var$milliseconds;\n    if ($622e0960ebd1fffe$var$seconds > 59) {\n        $622e0960ebd1fffe$var$minutes++;\n        $622e0960ebd1fffe$var$currentM.innerHTML = \"0\" + $622e0960ebd1fffe$var$minutes;\n        $622e0960ebd1fffe$var$seconds = 0;\n        $622e0960ebd1fffe$var$currentS.innerHTML = \"0\" + $622e0960ebd1fffe$var$seconds;\n    }\n    if ($622e0960ebd1fffe$var$milliseconds > 99) {\n        $622e0960ebd1fffe$var$seconds++;\n        $622e0960ebd1fffe$var$currentS.innerHTML = \"0\" + $622e0960ebd1fffe$var$seconds;\n        $622e0960ebd1fffe$var$milliseconds = 0;\n    }\n    if ($622e0960ebd1fffe$var$milliseconds > 9) $622e0960ebd1fffe$var$currentMS.innerHTML = $622e0960ebd1fffe$var$milliseconds;\n    if ($622e0960ebd1fffe$var$seconds > 9) $622e0960ebd1fffe$var$currentS.innerHTML = $622e0960ebd1fffe$var$seconds;\n    if ($622e0960ebd1fffe$var$minutes > 9) $622e0960ebd1fffe$var$currentM.innerHTML = $622e0960ebd1fffe$var$minutes;\n    if ($622e0960ebd1fffe$var$milliseconds <= 9) $622e0960ebd1fffe$var$currentMS.textContent = \"0\" + $622e0960ebd1fffe$var$milliseconds;\n}\nfunction $622e0960ebd1fffe$var$startConfig() {\n    $622e0960ebd1fffe$var$stopTimer();\n    $622e0960ebd1fffe$var$minutes = 0;\n    $622e0960ebd1fffe$var$seconds = 0;\n    $622e0960ebd1fffe$var$milliseconds = 0;\n    $622e0960ebd1fffe$var$currentMS.innerHTML = \"00\";\n    $622e0960ebd1fffe$var$currentS.innerHTML = \"00\";\n    $622e0960ebd1fffe$var$currentM.innerHTML = \"00\";\n    $622e0960ebd1fffe$var$isShuffle = true;\n    $622e0960ebd1fffe$var$currentTime[0].classList.remove(\"beat__best-time\");\n    $622e0960ebd1fffe$var$currentTime[0].classList.remove(\"no-beat__best-time\");\n    $622e0960ebd1fffe$var$game.addEventListener(\"click\", $622e0960ebd1fffe$var$getInterval);\n}\nfunction $622e0960ebd1fffe$var$getInterval() {\n    if (!$622e0960ebd1fffe$var$isShuffle) return;\n    $622e0960ebd1fffe$var$interval = setInterval($622e0960ebd1fffe$var$startTimer, 10);\n}\nfunction $622e0960ebd1fffe$var$stopTimer() {\n    clearInterval($622e0960ebd1fffe$var$interval);\n    $622e0960ebd1fffe$var$currentTimeValue = Number($622e0960ebd1fffe$var$currentM.textContent + $622e0960ebd1fffe$var$currentS.textContent + $622e0960ebd1fffe$var$currentMS.textContent);\n    if ($622e0960ebd1fffe$var$currentTimeValue !== 0 && $622e0960ebd1fffe$var$currentTimeValue <= $622e0960ebd1fffe$var$bestTimeValue && $622e0960ebd1fffe$var$bestTimeValue !== 0 || $622e0960ebd1fffe$var$bestTimeValue === 0) {\n        $622e0960ebd1fffe$var$bestTimeValue = $622e0960ebd1fffe$var$currentTimeValue;\n        $622e0960ebd1fffe$var$bestM.textContent = $622e0960ebd1fffe$var$currentM.textContent;\n        $622e0960ebd1fffe$var$bestS.textContent = $622e0960ebd1fffe$var$currentS.textContent;\n        $622e0960ebd1fffe$var$bestMS.textContent = $622e0960ebd1fffe$var$currentMS.textContent;\n        $622e0960ebd1fffe$var$saveInLocaleStorage($622e0960ebd1fffe$var$bestM.textContent, $622e0960ebd1fffe$var$bestS.textContent, $622e0960ebd1fffe$var$bestMS.textContent);\n        $622e0960ebd1fffe$var$currentTime[0].classList.add(\"beat__best-time\");\n    }\n    if (Number($622e0960ebd1fffe$var$currentTimeValue) > $622e0960ebd1fffe$var$bestTimeValue && $622e0960ebd1fffe$var$bestTimeValue !== 0) $622e0960ebd1fffe$var$currentTime[0].classList.add(\"no-beat__best-time\");\n}\nfunction $622e0960ebd1fffe$var$saveInLocaleStorage(min, sec, ms) {\n    localStorage.setItem(\"min\", min);\n    localStorage.setItem(\"sec\", sec);\n    localStorage.setItem(\"ms\", ms);\n}\n// =========== Check changing className for stop interval ===========\nlet $622e0960ebd1fffe$var$observeChanges = new MutationObserver(function(mutations) {\n    mutations.forEach(function(mutation) {\n        if (mutation.attributeName === \"class\") $622e0960ebd1fffe$var$stopTimer();\n    });\n});\nconst $622e0960ebd1fffe$var$config = {\n    attributes: true,\n    attributeFilter: [\n        \"class\"\n    ]\n};\n$622e0960ebd1fffe$var$observeChanges.observe($622e0960ebd1fffe$var$game, $622e0960ebd1fffe$var$config);\n\n\n\n\n//# sourceMappingURL=fifteen-page.eade8c9c.js.map\n","import './fifteen';\nimport './fifteen-timer';\n","const gameContainer = document.querySelector('.content--wrapper');\nconst containerButtons = document.querySelector('#fifteen');\nconst buttonItems = Array.from(document.querySelectorAll('.fifteen__button'));\n\nconst countItems = 16;\nconst gap = 10;\n\nif (buttonItems.length !== countItems) {\n  throw new Error(`There should be ${countItems} items in HTML`);\n}\n\n/* ====== Start Position ======*/\nbuttonItems[countItems - 1].style.display = 'none';\n\nlet matrix = getMatrix(buttonItems.map(el => Number(el.dataset.matrixId)));\n\nsetPositionItem(matrix);\n\n/* ====== Shuffle ======*/\nconst maxShuffleCount = 100;\nlet timer;\nlet shuffled = false;\nlet isShuffle = false;\nconst shuffledClassName = 'gameShuffle';\n\ndocument.querySelector('#shuffle').addEventListener('click', () => {\n  if (shuffled) {\n    return;\n  }\n  shuffled = true;\n  isShuffle = true;\n  let shuffleCount = 0;\n  clearInterval(timer);\n  gameContainer.classList.add(shuffledClassName);\n\n  timer = setInterval(() => {\n    randomSwap(matrix);\n    setPositionItem(matrix);\n\n    shuffleCount += 1;\n\n    if (shuffleCount >= maxShuffleCount) {\n      gameContainer.classList.remove(shuffledClassName);\n      clearInterval(timer);\n      shuffled = false;\n    }\n  }, 70);\n});\n\n/* ====== Change Position by click ======*/\nconst blankPosition = 16;\n\ncontainerButtons.addEventListener('click', e => {\n  if (shuffled) {\n    return;\n  }\n  const buttonItem = e.target.closest('button');\n  if (!buttonItem) {\n    return;\n  }\n  const buttonNumber = Number(buttonItem.dataset.matrixId);\n  const buttonCoords = findCoordsByNumber(buttonNumber, matrix);\n  const blankCoords = findCoordsByNumber(blankPosition, matrix);\n  const isValid = isValidForSwap(buttonCoords, blankCoords);\n\n  if (isValid) {\n    swap(blankCoords, buttonCoords, matrix);\n    setPositionItem(matrix);\n  }\n});\n\n/* ====== Change Position by keydown ======*/\nwindow.addEventListener('keydown', e => {\n  if (shuffled) {\n    return;\n  }\n  if (!e.key.includes('Arrow')) {\n    return;\n  }\n\n  const blankCoords = findCoordsByNumber(blankPosition, matrix);\n  const buttonCoords = {\n    x: blankCoords.x,\n    y: blankCoords.y,\n  };\n\n  const direction = e.key.split('Arrow')[1].toLowerCase();\n  const maxIndexMatrix = matrix.length;\n\n  switch (direction) {\n    case 'up':\n      buttonCoords.y += 1;\n      break;\n    case 'down':\n      buttonCoords.y -= 1;\n      break;\n    case 'left':\n      buttonCoords.x += 1;\n      break;\n    case 'right':\n      buttonCoords.x -= 1;\n      break;\n  }\n\n  if (\n    buttonCoords.y >= maxIndexMatrix ||\n    buttonCoords.y < 0 ||\n    buttonCoords.x >= maxIndexMatrix ||\n    buttonCoords.x < 0\n  ) {\n    return;\n  }\n\n  swap(blankCoords, buttonCoords, matrix);\n  setPositionItem(matrix);\n});\n\n/* ====== HELPERS ======*/\n/* =====================*/\nfunction getMatrix(arr) {\n  const matrix = [[], [], [], []];\n  let x = 0;\n  let y = 0;\n\n  for (let i = 0; i < arr.length; i++) {\n    if (x >= 4) {\n      y++;\n      x = 0;\n    }\n\n    matrix[y][x] = arr[i];\n    x++;\n  }\n\n  return matrix;\n}\n\n// ====================\nfunction setPositionItem(matrix) {\n  for (let y = 0; y < matrix.length; y++) {\n    for (let x = 0; x < matrix[y].length; x++) {\n      const value = matrix[y][x];\n      const item = buttonItems[value - 1];\n      setItemStyles(item, x, y);\n    }\n  }\n}\n\n// ====================\nfunction setItemStyles(item, x, y) {\n  const shiftPs = 100;\n  item.style.transform = `translate3D(calc(${x * shiftPs}% + ${gap}px), calc(${\n    y * shiftPs\n  }% + ${gap}px), 0)`;\n}\n\n// ====================\nlet blockedCoords = null;\nfunction randomSwap(matrix) {\n  const blankCoords = findCoordsByNumber(blankPosition, matrix);\n  const validCords = findValidCoords({\n    blankCoords,\n    matrix,\n    blockedCoords,\n  });\n\n  const swapCoords = validCords[Math.floor(Math.random() * validCords.length)];\n\n  swap(blankCoords, swapCoords, matrix);\n  blockedCoords = blankCoords;\n}\n\n// ====================\nfunction findValidCoords({ blankCoords, matrix, blockedCoords }) {\n  const validCordsArr = [];\n\n  for (let y = 0; y < matrix.length; y++) {\n    for (let x = 0; x < matrix[y].length; x++) {\n      if (isValidForSwap({ x, y }, blankCoords)) {\n        if (\n          !blockedCoords ||\n          !(blockedCoords.x === x && blockedCoords.y === y)\n        ) {\n          validCordsArr.push({ x, y });\n        }\n      }\n    }\n  }\n  return validCordsArr;\n}\n\n// ====================\nfunction findCoordsByNumber(number, matrix) {\n  for (let y = 0; y < matrix.length; y++) {\n    for (let x = 0; x < matrix[y].length; x++) {\n      if (matrix[y][x] === number) {\n        return { x, y };\n      }\n    }\n  }\n  return null;\n}\n\n// ====================\nfunction isValidForSwap(coordsBtn, coordsBlank) {\n  const diffX = Math.abs(coordsBtn.x - coordsBlank.x);\n  const diffY = Math.abs(coordsBtn.y - coordsBlank.y);\n\n  return (\n    (diffX === 1 || diffY === 1) &&\n    (coordsBtn.x === coordsBlank.x || coordsBtn.y === coordsBlank.y)\n  );\n}\n\n// ====================\nfunction swap(blankCoords, buttonCoords, matrix) {\n  const blankNumber = matrix[blankCoords.y][blankCoords.x];\n  matrix[blankCoords.y][blankCoords.x] = matrix[buttonCoords.y][buttonCoords.x];\n  matrix[buttonCoords.y][buttonCoords.x] = blankNumber;\n\n  if (isWon(matrix)) {\n    if (!isShuffle) {\n      return;\n    }\n    addWonClass();\n    isShuffle = false;\n  }\n}\n\n/* ====== Show Win ======*/\nconst winFlatArr = new Array(16).fill(0).map((_item, i) => i + 1);\n\nfunction isWon(matrix) {\n  const flatMatrix = matrix.flat();\n\n  for (let i = 0; i < winFlatArr.length; i++) {\n    if (flatMatrix[i] !== winFlatArr[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n// =======================\nconst wonClass = 'fifteenWon';\nfunction addWonClass() {\n  setTimeout(() => {\n    containerButtons.classList.add(wonClass);\n\n    setTimeout(() => {\n      containerButtons.classList.remove(wonClass);\n    }, 1350);\n  }, 350);\n}\n","const game = document.querySelector('#fifteen');\nconst shuffleBtn = document.querySelector('.fifteen__shuffle');\nconst currentM = document.querySelector('#current-m');\nconst currentS = document.querySelector('#current-s');\nconst currentMS = document.querySelector('#current-ms');\nconst bestM = document.querySelector('#best-m');\nconst bestS = document.querySelector('#best-s');\nconst bestMS = document.querySelector('#best-ms');\nconst currentTime = document.querySelectorAll('.timer__wrapper');\n\nbestM.innerHTML = localStorage.getItem('min') || '00';\nbestS.innerHTML = localStorage.getItem('sec') || '00';\nbestMS.innerHTML = localStorage.getItem('ms') || '00';\n\nlet isShuffle = false;\nlet isFirstGame = false;\n\nlet minutes = 0;\nlet seconds = 0;\nlet milliseconds = 0;\n\nlet interval;\n\nlet bestTimeValue = Number(\n  (localStorage.getItem('min') || '00') +\n    (localStorage.getItem('sec') || '00') +\n    (localStorage.getItem('ms') || '00')\n);\n\nif (bestTimeValue === 0) {\n  isFirstGame = true;\n}\n\nlet currentTimeValue = null;\n\nshuffleBtn.addEventListener('click', startConfig);\n\nfunction startTimer() {\n  game.removeEventListener('click', getInterval);\n\n  milliseconds++;\n  currentMS.innerHTML = '0' + milliseconds;\n\n  if (seconds > 59) {\n    minutes++;\n    currentM.innerHTML = '0' + minutes;\n    seconds = 0;\n    currentS.innerHTML = '0' + seconds;\n  }\n  if (milliseconds > 99) {\n    seconds++;\n    currentS.innerHTML = '0' + seconds;\n    milliseconds = 0;\n  }\n\n  if (milliseconds > 9) {\n    currentMS.innerHTML = milliseconds;\n  }\n\n  if (seconds > 9) {\n    currentS.innerHTML = seconds;\n  }\n\n  if (minutes > 9) {\n    currentM.innerHTML = minutes;\n  }\n\n  if (milliseconds <= 9) {\n    currentMS.textContent = '0' + milliseconds;\n  }\n}\n\nfunction startConfig() {\n  stopTimer();\n  minutes = 0;\n  seconds = 0;\n  milliseconds = 0;\n  currentMS.innerHTML = '00';\n  currentS.innerHTML = '00';\n  currentM.innerHTML = '00';\n  isShuffle = true;\n\n  currentTime[0].classList.remove('beat__best-time');\n  currentTime[0].classList.remove('no-beat__best-time');\n\n  game.addEventListener('click', getInterval);\n}\n\nfunction getInterval() {\n  if (!isShuffle) return;\n\n  interval = setInterval(startTimer, 10);\n}\n\nfunction stopTimer() {\n  clearInterval(interval);\n\n  currentTimeValue = Number(\n    currentM.textContent + currentS.textContent + currentMS.textContent\n  );\n\n  if (\n    (currentTimeValue !== 0 &&\n      currentTimeValue <= bestTimeValue &&\n      bestTimeValue !== 0) ||\n    bestTimeValue === 0\n  ) {\n    bestTimeValue = currentTimeValue;\n    bestM.textContent = currentM.textContent;\n    bestS.textContent = currentS.textContent;\n    bestMS.textContent = currentMS.textContent;\n\n    saveInLocaleStorage(\n      bestM.textContent,\n      bestS.textContent,\n      bestMS.textContent\n    );\n\n    currentTime[0].classList.add('beat__best-time');\n  }\n\n  if (Number(currentTimeValue) > bestTimeValue && bestTimeValue !== 0) {\n    currentTime[0].classList.add('no-beat__best-time');\n  }\n}\n\nfunction saveInLocaleStorage(min, sec, ms) {\n  localStorage.setItem('min', min);\n  localStorage.setItem('sec', sec);\n  localStorage.setItem('ms', ms);\n}\n\n// =========== Check changing className for stop interval ===========\nlet observeChanges = new MutationObserver(function (mutations) {\n  mutations.forEach(function (mutation) {\n    if (mutation.attributeName === 'class') {\n      stopTimer();\n    }\n  });\n});\n\nconst config = { attributes: true, attributeFilter: ['class'] };\nobserveChanges.observe(game, config);\n"],"names":["$00f8eafa334b9c17$var$timer","$622e0960ebd1fffe$var$interval","$00f8eafa334b9c17$var$gameContainer","document","querySelector","$00f8eafa334b9c17$var$containerButtons","$00f8eafa334b9c17$var$buttonItems","Array","from","querySelectorAll","length","Error","$00f8eafa334b9c17$var$countItems","style","display","$00f8eafa334b9c17$var$matrix","$00f8eafa334b9c17$var$getMatrix","arr","matrix","x","y","i","map","el","Number","dataset","matrixId","$00f8eafa334b9c17$var$setPositionItem","$00f8eafa334b9c17$var$shuffled","$00f8eafa334b9c17$var$isShuffle","$00f8eafa334b9c17$var$shuffledClassName","$00f8eafa334b9c17$var$setItemStyles","item","value","transform","addEventListener","shuffleCount","clearInterval","classList","add","setInterval","$00f8eafa334b9c17$var$randomSwap","blankCoords","$00f8eafa334b9c17$var$findCoordsByNumber","validCords","$00f8eafa334b9c17$var$findValidCoords","blockedCoords","validCordsArr","$00f8eafa334b9c17$var$isValidForSwap","push","$00f8eafa334b9c17$var$blockedCoords","$00f8eafa334b9c17$var$swap","Math","floor","random","remove","e","buttonItem","target","closest","buttonCoords","window","key","includes","direction","split","toLowerCase","maxIndexMatrix","number","coordsBtn","coordsBlank","diffX","abs","diffY","blankNumber","$00f8eafa334b9c17$var$isWon","flatMatrix","flat","$00f8eafa334b9c17$var$winFlatArr","setTimeout","$00f8eafa334b9c17$var$wonClass","fill","_item","$622e0960ebd1fffe$var$game","$622e0960ebd1fffe$var$shuffleBtn","$622e0960ebd1fffe$var$currentM","$622e0960ebd1fffe$var$currentS","$622e0960ebd1fffe$var$currentMS","$622e0960ebd1fffe$var$bestM","$622e0960ebd1fffe$var$bestS","$622e0960ebd1fffe$var$bestMS","$622e0960ebd1fffe$var$currentTime","innerHTML","localStorage","getItem","$622e0960ebd1fffe$var$isShuffle","$622e0960ebd1fffe$var$minutes","$622e0960ebd1fffe$var$seconds","$622e0960ebd1fffe$var$milliseconds","$622e0960ebd1fffe$var$bestTimeValue","$622e0960ebd1fffe$var$currentTimeValue","$622e0960ebd1fffe$var$startTimer","removeEventListener","$622e0960ebd1fffe$var$getInterval","textContent","$622e0960ebd1fffe$var$stopTimer","min","sec","ms","setItem","$622e0960ebd1fffe$var$observeChanges","MutationObserver","mutations","forEach","mutation","attributeName","observe","attributes","attributeFilter"],"version":3,"file":"fifteen-page.eade8c9c.js.map"}