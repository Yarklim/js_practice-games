{"mappings":"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","sources":["<anon>","js/index.js","js/fifteen.js"],"sourcesContent":["(function () {\nconst $3429de5b27913053$var$containerButtons = document.querySelector(\"#fifteen\");\nconst $3429de5b27913053$var$buttonItems = Array.from(document.querySelectorAll(\".fifteen__button\"));\nconst $3429de5b27913053$var$countItems = 16;\nconst $3429de5b27913053$var$gap = 10;\nif ($3429de5b27913053$var$buttonItems.length !== $3429de5b27913053$var$countItems) throw new Error(`There should be ${$3429de5b27913053$var$countItems} items in HTML`);\n/* ====== Start Position ======*/ $3429de5b27913053$var$buttonItems[$3429de5b27913053$var$countItems - 1].style.display = \"none\";\nlet $3429de5b27913053$var$matrix = $3429de5b27913053$var$getMatrix($3429de5b27913053$var$buttonItems.map((el)=>Number(el.dataset.matrixId)));\n$3429de5b27913053$var$setPositionItem($3429de5b27913053$var$matrix);\n/* ====== Shuffle ======*/ document.querySelector(\"#shuffle\").addEventListener(\"click\", ()=>{\n    const shuffledArr = $3429de5b27913053$var$shuffleArr($3429de5b27913053$var$matrix.flat());\n    $3429de5b27913053$var$matrix = $3429de5b27913053$var$getMatrix(shuffledArr);\n    $3429de5b27913053$var$setPositionItem($3429de5b27913053$var$matrix);\n});\n/* ====== Change Position by click ======*/ const $3429de5b27913053$var$blankPosition = 16;\n$3429de5b27913053$var$containerButtons.addEventListener(\"click\", (e)=>{\n    const buttonItem = e.target.closest(\"button\");\n    if (!buttonItem) return;\n    const buttonNumber = Number(buttonItem.dataset.matrixId);\n    const buttonCoords = $3429de5b27913053$var$findCoordsByNumber(buttonNumber, $3429de5b27913053$var$matrix);\n    const blankCoords = $3429de5b27913053$var$findCoordsByNumber($3429de5b27913053$var$blankPosition, $3429de5b27913053$var$matrix);\n    const isValid = $3429de5b27913053$var$isValidForSwap(buttonCoords, blankCoords);\n    if (isValid) {\n        $3429de5b27913053$var$swap(blankCoords, buttonCoords, $3429de5b27913053$var$matrix);\n        $3429de5b27913053$var$setPositionItem($3429de5b27913053$var$matrix);\n    }\n});\n/* ====== Change Position by keydown ======*/ window.addEventListener(\"keydown\", (e)=>{\n    if (!e.key.includes(\"Arrow\")) return;\n    const blankCoords = $3429de5b27913053$var$findCoordsByNumber($3429de5b27913053$var$blankPosition, $3429de5b27913053$var$matrix);\n    const buttonCoords = {\n        x: blankCoords.x,\n        y: blankCoords.y\n    };\n    const direction = e.key.split(\"Arrow\")[1].toLowerCase();\n    const maxIndexMatrix = $3429de5b27913053$var$matrix.length;\n    switch(direction){\n        case \"up\":\n            buttonCoords.y += 1;\n            break;\n        case \"down\":\n            buttonCoords.y -= 1;\n            break;\n        case \"left\":\n            buttonCoords.x += 1;\n            break;\n        case \"right\":\n            buttonCoords.x -= 1;\n            break;\n    }\n    if (buttonCoords.y >= maxIndexMatrix || buttonCoords.y < 0 || buttonCoords.x >= maxIndexMatrix || buttonCoords.x < 0) return;\n    $3429de5b27913053$var$swap(blankCoords, buttonCoords, $3429de5b27913053$var$matrix);\n    $3429de5b27913053$var$setPositionItem($3429de5b27913053$var$matrix);\n});\n/* ====== Show Win ======*/ /* ====== Helpers ======*/ function $3429de5b27913053$var$getMatrix(arr) {\n    const matrix = [\n        [],\n        [],\n        [],\n        []\n    ];\n    let x = 0;\n    let y = 0;\n    for(let i = 0; i < arr.length; i++){\n        if (x >= 4) {\n            y++;\n            x = 0;\n        }\n        matrix[y][x] = arr[i];\n        x++;\n    }\n    return matrix;\n}\nfunction $3429de5b27913053$var$setPositionItem(matrix) {\n    for(let y = 0; y < matrix.length; y++)for(let x = 0; x < matrix[y].length; x++){\n        const value = matrix[y][x];\n        const item = $3429de5b27913053$var$buttonItems[value - 1];\n        $3429de5b27913053$var$setItemStyles(item, x, y);\n    }\n}\nfunction $3429de5b27913053$var$setItemStyles(item, x, y) {\n    const shiftPs = 100;\n    item.style.transform = `translate3D(calc(${x * shiftPs}% + ${$3429de5b27913053$var$gap}px), calc(${y * shiftPs}% + ${$3429de5b27913053$var$gap}px), 0)`;\n}\nfunction $3429de5b27913053$var$shuffleArr(arr) {\n    return arr.map((el)=>({\n            el: el,\n            sort: Math.random()\n        })).sort((a, b)=>a.sort - b.sort).map(({ el: el })=>el);\n}\nfunction $3429de5b27913053$var$findCoordsByNumber(number, matrix) {\n    for(let y = 0; y < matrix.length; y++)for(let x = 0; x < matrix[y].length; x++){\n        if (matrix[y][x] === number) return {\n            x: x,\n            y: y\n        };\n    }\n    return null;\n}\nfunction $3429de5b27913053$var$isValidForSwap(coordsBtn, coordsBlank) {\n    const diffX = Math.abs(coordsBtn.x - coordsBlank.x);\n    const diffY = Math.abs(coordsBtn.y - coordsBlank.y);\n    return (diffX === 1 || diffY === 1) && (coordsBtn.x === coordsBlank.x || coordsBtn.y === coordsBlank.y);\n}\nfunction $3429de5b27913053$var$swap(blankCoords, buttonCoords, matrix) {\n    const blankNumber = matrix[blankCoords.y][blankCoords.x];\n    matrix[blankCoords.y][blankCoords.x] = matrix[buttonCoords.y][buttonCoords.x];\n    matrix[buttonCoords.y][buttonCoords.x] = blankNumber;\n    if ($3429de5b27913053$var$isWon(matrix)) $3429de5b27913053$var$addWonClass();\n}\nconst $3429de5b27913053$var$winFlatArr = new Array(16).fill(0).map((_item, i)=>i + 1);\nfunction $3429de5b27913053$var$isWon(matrix) {\n    const flatMatrix = matrix.flat();\n    for(let i = 0; i < $3429de5b27913053$var$winFlatArr.length; i++){\n        if (flatMatrix[i] !== $3429de5b27913053$var$winFlatArr[i]) return false;\n    }\n    return true;\n}\nconst $3429de5b27913053$var$wonClass = \"fifteenWon\";\nfunction $3429de5b27913053$var$addWonClass() {\n    setTimeout(()=>{\n        $3429de5b27913053$var$containerButtons.classList.add($3429de5b27913053$var$wonClass);\n        setTimeout(()=>{\n            $3429de5b27913053$var$containerButtons.classList.remove($3429de5b27913053$var$wonClass);\n        }, 1350);\n    }, 350);\n}\n\n\n\n})();\n//# sourceMappingURL=index.6681f308.js.map\n","import './fifteen';\n","const containerButtons = document.querySelector('#fifteen');\nconst buttonItems = Array.from(document.querySelectorAll('.fifteen__button'));\n\nconst countItems = 16;\nconst gap = 10;\n\nif (buttonItems.length !== countItems) {\n  throw new Error(`There should be ${countItems} items in HTML`);\n}\n\n/* ====== Start Position ======*/\nbuttonItems[countItems - 1].style.display = 'none';\n\nlet matrix = getMatrix(buttonItems.map(el => Number(el.dataset.matrixId)));\n\nsetPositionItem(matrix);\n\n/* ====== Shuffle ======*/\ndocument.querySelector('#shuffle').addEventListener('click', () => {\n  const shuffledArr = shuffleArr(matrix.flat());\n  matrix = getMatrix(shuffledArr);\n  setPositionItem(matrix);\n});\n\n/* ====== Change Position by click ======*/\nconst blankPosition = 16;\n\ncontainerButtons.addEventListener('click', e => {\n  const buttonItem = e.target.closest('button');\n  if (!buttonItem) {\n    return;\n  }\n  const buttonNumber = Number(buttonItem.dataset.matrixId);\n  const buttonCoords = findCoordsByNumber(buttonNumber, matrix);\n  const blankCoords = findCoordsByNumber(blankPosition, matrix);\n  const isValid = isValidForSwap(buttonCoords, blankCoords);\n\n  if (isValid) {\n    swap(blankCoords, buttonCoords, matrix);\n    setPositionItem(matrix);\n  }\n});\n\n/* ====== Change Position by keydown ======*/\nwindow.addEventListener('keydown', e => {\n  if (!e.key.includes('Arrow')) {\n    return;\n  }\n\n  const blankCoords = findCoordsByNumber(blankPosition, matrix);\n  const buttonCoords = {\n    x: blankCoords.x,\n    y: blankCoords.y,\n  };\n\n  const direction = e.key.split('Arrow')[1].toLowerCase();\n  const maxIndexMatrix = matrix.length;\n\n  switch (direction) {\n    case 'up':\n      buttonCoords.y += 1;\n      break;\n    case 'down':\n      buttonCoords.y -= 1;\n      break;\n    case 'left':\n      buttonCoords.x += 1;\n      break;\n    case 'right':\n      buttonCoords.x -= 1;\n      break;\n  }\n\n  if (\n    buttonCoords.y >= maxIndexMatrix ||\n    buttonCoords.y < 0 ||\n    buttonCoords.x >= maxIndexMatrix ||\n    buttonCoords.x < 0\n  ) {\n    return;\n  }\n\n  swap(blankCoords, buttonCoords, matrix);\n  setPositionItem(matrix);\n});\n\n/* ====== Show Win ======*/\n\n/* ====== Helpers ======*/\nfunction getMatrix(arr) {\n  const matrix = [[], [], [], []];\n  let x = 0;\n  let y = 0;\n\n  for (let i = 0; i < arr.length; i++) {\n    if (x >= 4) {\n      y++;\n      x = 0;\n    }\n\n    matrix[y][x] = arr[i];\n    x++;\n  }\n\n  return matrix;\n}\n\nfunction setPositionItem(matrix) {\n  for (let y = 0; y < matrix.length; y++) {\n    for (let x = 0; x < matrix[y].length; x++) {\n      const value = matrix[y][x];\n      const item = buttonItems[value - 1];\n      setItemStyles(item, x, y);\n    }\n  }\n}\n\nfunction setItemStyles(item, x, y) {\n  const shiftPs = 100;\n  item.style.transform = `translate3D(calc(${x * shiftPs}% + ${gap}px), calc(${\n    y * shiftPs\n  }% + ${gap}px), 0)`;\n}\n\nfunction shuffleArr(arr) {\n  return arr\n    .map(el => ({ el, sort: Math.random() }))\n    .sort((a, b) => a.sort - b.sort)\n    .map(({ el }) => el);\n}\n\nfunction findCoordsByNumber(number, matrix) {\n  for (let y = 0; y < matrix.length; y++) {\n    for (let x = 0; x < matrix[y].length; x++) {\n      if (matrix[y][x] === number) {\n        return { x, y };\n      }\n    }\n  }\n  return null;\n}\n\nfunction isValidForSwap(coordsBtn, coordsBlank) {\n  const diffX = Math.abs(coordsBtn.x - coordsBlank.x);\n  const diffY = Math.abs(coordsBtn.y - coordsBlank.y);\n\n  return (\n    (diffX === 1 || diffY === 1) &&\n    (coordsBtn.x === coordsBlank.x || coordsBtn.y === coordsBlank.y)\n  );\n}\n\nfunction swap(blankCoords, buttonCoords, matrix) {\n  const blankNumber = matrix[blankCoords.y][blankCoords.x];\n  matrix[blankCoords.y][blankCoords.x] = matrix[buttonCoords.y][buttonCoords.x];\n  matrix[buttonCoords.y][buttonCoords.x] = blankNumber;\n\n  if (isWon(matrix)) {\n    addWonClass();\n  }\n}\n\nconst winFlatArr = new Array(16).fill(0).map((_item, i) => i + 1);\n\nfunction isWon(matrix) {\n  const flatMatrix = matrix.flat();\n\n  for (let i = 0; i < winFlatArr.length; i++) {\n    if (flatMatrix[i] !== winFlatArr[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nconst wonClass = 'fifteenWon';\nfunction addWonClass() {\n  setTimeout(() => {\n    containerButtons.classList.add(wonClass);\n\n    setTimeout(() => {\n      containerButtons.classList.remove(wonClass);\n    }, 1350);\n  }, 350);\n}\n"],"names":["$3429de5b27913053$var$containerButtons","document","querySelector","$3429de5b27913053$var$buttonItems","Array","from","querySelectorAll","length","Error","$3429de5b27913053$var$countItems","style","display","$3429de5b27913053$var$matrix","$3429de5b27913053$var$getMatrix","map","el","Number","dataset","matrixId","arr","matrix","x","y","i","$3429de5b27913053$var$setPositionItem","$3429de5b27913053$var$setItemStyles","item","value","transform","$3429de5b27913053$var$findCoordsByNumber","number","$3429de5b27913053$var$swap","blankCoords","buttonCoords","blankNumber","$3429de5b27913053$var$isWon","flatMatrix","flat","$3429de5b27913053$var$winFlatArr","setTimeout","classList","add","$3429de5b27913053$var$wonClass","remove","addEventListener","sort","Math","random","a","b","e","buttonItem","target","closest","$3429de5b27913053$var$isValidForSwap","coordsBtn","coordsBlank","diffX","abs","diffY","window","key","includes","direction","split","toLowerCase","maxIndexMatrix","fill","_item"],"version":3,"file":"index.6681f308.js.map"}